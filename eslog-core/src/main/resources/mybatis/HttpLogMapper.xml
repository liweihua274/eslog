<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd123.framework.es.core.storage.mapper.HttpLogMapper">
  <resultMap id="BaseResultMap" type="com.hd123.framework.es.core.storage.entity.HttpLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="request_content" jdbcType="VARCHAR" property="requestContent" />
    <result column="response_content" jdbcType="VARCHAR" property="responseContent" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="timestamp" jdbcType="VARCHAR" property="timestamp" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="exception_content" jdbcType="VARCHAR" property="exceptionContent" />
    <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="request_url" jdbcType="VARCHAR" property="requestUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, level, request_content, response_content, app_id, sign, timestamp, org_code, 
    exception_content, trace_id, begin_time, end_time, request_url
  </sql>
  <select id="selectByExample" parameterType="com.hd123.framework.es.core.storage.entity.HttpLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from http_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from http_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from http_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hd123.framework.es.core.storage.entity.HttpLogExample">
    delete from http_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hd123.framework.es.core.storage.entity.HttpLog">
    insert into http_log (id, level, request_content, 
      response_content, app_id, sign, 
      timestamp, org_code, exception_content, 
      trace_id, begin_time, end_time, 
      request_url)
    values (#{id,jdbcType=VARCHAR}, #{level,jdbcType=TINYINT}, #{requestContent,jdbcType=VARCHAR}, 
      #{responseContent,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, 
      #{timestamp,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR}, #{exceptionContent,jdbcType=VARCHAR}, 
      #{traceId,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{requestUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hd123.framework.es.core.storage.entity.HttpLog">
    insert into http_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="requestContent != null">
        request_content,
      </if>
      <if test="responseContent != null">
        response_content,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="timestamp != null">
        timestamp,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="exceptionContent != null">
        exception_content,
      </if>
      <if test="traceId != null">
        trace_id,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="requestUrl != null">
        request_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="requestContent != null">
        #{requestContent,jdbcType=VARCHAR},
      </if>
      <if test="responseContent != null">
        #{responseContent,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="exceptionContent != null">
        #{exceptionContent,jdbcType=VARCHAR},
      </if>
      <if test="traceId != null">
        #{traceId,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestUrl != null">
        #{requestUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hd123.framework.es.core.storage.entity.HttpLogExample" resultType="java.lang.Long">
    select count(*) from http_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update http_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.requestContent != null">
        request_content = #{record.requestContent,jdbcType=VARCHAR},
      </if>
      <if test="record.responseContent != null">
        response_content = #{record.responseContent,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.sign != null">
        sign = #{record.sign,jdbcType=VARCHAR},
      </if>
      <if test="record.timestamp != null">
        timestamp = #{record.timestamp,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.exceptionContent != null">
        exception_content = #{record.exceptionContent,jdbcType=VARCHAR},
      </if>
      <if test="record.traceId != null">
        trace_id = #{record.traceId,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestUrl != null">
        request_url = #{record.requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update http_log
    set id = #{record.id,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=TINYINT},
      request_content = #{record.requestContent,jdbcType=VARCHAR},
      response_content = #{record.responseContent,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=VARCHAR},
      timestamp = #{record.timestamp,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      exception_content = #{record.exceptionContent,jdbcType=VARCHAR},
      trace_id = #{record.traceId,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      request_url = #{record.requestUrl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd123.framework.es.core.storage.entity.HttpLog">
    update http_log
    <set>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="requestContent != null">
        request_content = #{requestContent,jdbcType=VARCHAR},
      </if>
      <if test="responseContent != null">
        response_content = #{responseContent,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null">
        timestamp = #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="exceptionContent != null">
        exception_content = #{exceptionContent,jdbcType=VARCHAR},
      </if>
      <if test="traceId != null">
        trace_id = #{traceId,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestUrl != null">
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd123.framework.es.core.storage.entity.HttpLog">
    update http_log
    set level = #{level,jdbcType=TINYINT},
      request_content = #{requestContent,jdbcType=VARCHAR},
      response_content = #{responseContent,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      timestamp = #{timestamp,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      exception_content = #{exceptionContent,jdbcType=VARCHAR},
      trace_id = #{traceId,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      request_url = #{requestUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.hd123.framework.es.core.storage.entity.HttpLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from http_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="com.hd123.framework.es.core.storage.entity.HttpLogExample" resultType="long" >
    select sum(${sumCol}) from http_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into http_log  (id, level, request_content, 
        response_content, app_id, sign, 
        timestamp, org_code, exception_content, 
        trace_id, begin_time, end_time, 
        request_url)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.level,jdbcType=TINYINT}, #{item.requestContent,jdbcType=VARCHAR}, 
        #{item.responseContent,jdbcType=VARCHAR}, #{item.appId,jdbcType=VARCHAR}, #{item.sign,jdbcType=VARCHAR}, 
        #{item.timestamp,jdbcType=VARCHAR}, #{item.orgCode,jdbcType=VARCHAR}, #{item.exceptionContent,jdbcType=VARCHAR}, 
        #{item.traceId,jdbcType=VARCHAR}, #{item.beginTime,jdbcType=TIMESTAMP}, #{item.endTime,jdbcType=TIMESTAMP}, 
        #{item.requestUrl,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
</mapper>